FORMAT: 1A
HOST: https://api.eve.exchange

# EVE Exchange

This API is designed for traders who wish to have more granular access to the EVE-X market dataset for exporting, or to remotely access special utilities related to their account.

Authentication is required in order to access any endpoint in this API. Authentication is done through an additional "Authorization" HTTP header. The format is as follows:

```http
Authorization: Key {api_key}
```

Where {api_key} is the API key provided by EVE Exchange in your Profile -> API Access page. In order to use your API key, it must first be enabled there.
The EVE Exchange application uses a token in place of a key for authenticating with the API, which can also be used but is not recommended.

The access for each endpoint can range from being fully accessible, premium only, or exclusive to API access subscribers. Each endpoint will specify its availability.

Limited support is provided to API access subscribers by contacting us directly. Please report any bugs you find.

## Group Market

Actions and resources related to market data.

## Forecast [/market/forecast{&minspread,maxspread,minvolume,maxvolume,minprice,maxprice}]

+ Parameters
    + minspread: 5 (number) Minimum spread percentage
    + maxspread: 15 (number) Maximum spread percentage
    + minvolume: 25 (number) Minimum traded volume
    + maxvolume: 100 (number) Maximum traded volume
    + minprice: 25000000 (number) Minimum buy price
    + maxprice: 100000000 (number) Maximum buy price

### Request a forecast of ideal trades based on the supplied parameters [GET]

Returns an array of market data documents that meet the given parameters.
At least one of each spread, volume, and price parameters must be set using either min, max, or both.

Premium subscription required.

+ Response 200 (application/json)
    + Attributes (array[Forecast Result], fixed)

## Current [/market/current/{region}/{typeid}]

+ Parameters
    + typeid: 10000002 (number) Region ID
    + typeid: 34 (number) Item type ID

### Request the current market data for an item [GET]

API access subscription required.

+ Response 200 (application/json)
    + Attributes (Current Market Data)

## 5 Minute History [/market/history/minutes/{typeid}]

+ Parameters
    + typeid: 34 (number) Item type id for history request

### Request market history at a 5 minute time resolution for a specific item [GET]

The past 24 hours of market data returned in 5 minute intervals.

API access subscription required.

+ Response 200 (application/json)
    + Attributes (array[Minutes Bulk Market Data], fixed)

## Hourly History [/market/history/hourly/{typeid}]

+ Parameters
    + typeid: 34 (number) Item type id for history request

### Request market history at an hourly time resolution for a specific item [GET]

The past 7 days of market data returned in hourly intervals.

API access subscription required.

+ Response 200 (application/json)
    + Attributes (array[Minutes Bulk Market Data], fixed)

## Daily History [/market/history/daily/{typeid}]

+ Parameters
    + typeid: 34 (number) Item type id for history request

### Request market history at a daily time resolution for a specific item [GET]

Returns the entire available market history that EVE Exchange has been recording in daily intervals.

API access subscription required.

+ Response 200 (application/json)
    + Attributes (array[Daily Bulk Market Data], fixed)

## Own Market Orders [/market/orders/self]

### Return the market orders for each profile on your account [GET]

This uses the same format as the CREST market orders in addition to fields that identify the profile each order belongs to.

API access subscription required.

+ Response 200 (application/json)
        [
            {
                "bid": "1",
                "issued": "2016-11-19 19:40:06",
                "minVolume": "1",
                "orderID": "4679197030",
                "orderState": "0",
                "price": "18875624.64",
                "stationID": "60003760",
                "typeID": "29668",
                "user_id": 12345678,
                "volEntered": "10",
                "volRemaining": "5",
                "who": "Character Name",
                "whoID": 12345678
            }
        ]

## Group Portfolio

Actions and resources related to portfolios.

## Create [/portfolio/create]

### Create a new portfolio [POST]

Premium subscription required.

+ Request (application/json)

    + Attributes
        + name: Portfolio Name (string, required) - Name of the portfolio. Minimum 4 characters, maximum 32
        + description: Portfolio Description (string) - Short description of the portfolio. maximum 100 characters
        + type: 1 (number, required) - Type should be 0 for Trading Portfolio or 1 for Industry Portfolio
        + components (array[Portfolio Component], required) - Components for this component. Only 1 manufacturable component can be used for an Industry Portfolio
        + efficiency: 10 (number) - A percentage from 0 to 10 for the material efficiency used by the Industry Portfolio. Can be ignored for a Trading Portfolio

+ Response 200 (application/json)

        {
            "message": 'Your new portfolio has been created with an id of 1'
        }

## Delete [/portfolio/delete/{id}]

+ Parameters
    + id: 1 (required, number) - Portfolio ID

### Delete a portfolio [POST]

Premium subscription required.

+ Response 200 (application/json)

        {
            "message": 'Your portfolio has been deleted'
        }

## Get Portfolio [/portfolio/get/{id}]

+ Parameters
    + id: 1 (required, number) - Portfolio ID

### Get a single portfolio by its ID [GET]

API access subscription required.

+ Response 200 (application/json)

    + Attributes (Portfolio, fixed)

## Get All Portfolios [/portfolio/get/all]

### Returns all portfolios that you own [GET]

API access subscription required.

+ Response 200 (application/json)

    + Attributes (array[Portfolio], fixed)

## Group Subscription

Actions and resources related to the users subscription.

## Subscribe [/subscription/subscribe]

### Activate premium subscription using current balance [POST]

+ Response 200 (application/json)

        {
            "message": 'Your subscription status has been updated'
        }

## Unsubscribe [/subscription/unsubscribe]

### Cancel active premium subscription [POST]

Premium subscription required.

+ Response 200 (application/json)

        {
            "message": 'Your subscription status has been updated'
        }

## Subscription Withdrawal [/subscription/withdraw/{amount}]

+ Parameters
    + amount: 100000000 (required, number) - Amount in ISK that is requested for withdrawal

### Request a withdrawal from the users subscription balance [POST]

+ Response 200 (application/json)

        {
            "message": 'Your withdrawal request has been submitted'
        }

## Enable API [/subscription/api/enable]

### Activate API service access [POST]

Premium subscription required.

+ Response 200 (application/json)

        {
            "message": 'API access has been enabled on your account'
        }

## Disable API [/subscription/api/disable]

### Disable API service access [POST]

Premium subscription required.

+ Response 200 (application/json)

        {
            "message": 'API access has been disabled on your account'
        }

## Group Notification

## Mark as read [/notification/{id}/read]

+ Parameters
    + id: 57fecb8e533fadda411ce082 (required, string) - Notification unique id

### Mark a single notification as read [POST]

+ Response 200 (application/json)

        {
            "message": 'Notificaton status is updated'
        }

## Mark as unread [/notification/{id}/unread]

+ Parameters
    + id: 57fecb8e533fadda411ce082 (required, string) - Notification unique id

### Mark a single notification as unread [POST]

+ Response 200 (application/json)

        {
            "message": 'Notificaton status is updated'
        }

## Mark all as read [/notification/all/read]

### Mark all unread notificatons as read [POST]

+ Response 200 (application/json)

        {
            "message": 'Notificaton statuses are updated'
        }

## Group API Keys

## Add [/apikey/add]

### Add a new character or corporation api key [POST]

Premium subscription required for corporation keys.

+ Request (application/json)

    + Attributes
        + type: 0 (number, required) - 0 for character or 1 for corporation
        + keyID: 123456 (string, required) - The api key
        + vCode: 12345678 (string, required) - The verification code
        + characterID: 56432138 (number) - The selected character in the case of an account key

+ Response 200 (application/json)

        {
            "message": 'API key has been added to your account'
        }

## Remove [/apikey/remove/{id}]

+ Parameters
    + id: 57fecb8e533fadda411ce082 (required, string) - API key unique ID

### Remove the requested API key from the account by using its unique ID, which can be retrieved from the /apikey/get endpoint. [GET]

+ Response 200 (application/json)

        {
            "message": 'API key has been removed from your account'
        }

## Get all [/apikey/get]

### Returns all of the active api keys on the account [GET]

+ Response 200 (application/json)
    + Attributes (array[API Key])

## Get specific key [/apikey/get/{id}]

+ Parameters
    + id: 57fecb8e533fadda411ce082 (required, string) - API key unique ID

### Returns the status of a specific api key by its id [GET]

+ Response 200 (application/json)
    + Attributes (API Key)

# Data Structures

## Forecast Result
+ buyPercentile: 5.705 (number) - Adjusted fifth percentile buy price
+ sellPercentile: 5.9 (number) - Adjusted fifth percentile sell price
+ spread: 3.305084745762727 (number) - Margin between buy & sell price
+ tradeVolume: 1000 (number) - Estimated daily trade volume for the past day
+ type: 34 (number) - Type/item ID for this item

## Current Market Data
+ tradeVolume: 1000 (number) - Approximated trade volume for the time period
+ spread: 14.7 (number) - Margin between buy & sell price
+ buyPercentile: 237683 (number) - Adjusted buy price
+ sellPercentile: 269432 (number) - Adjusted sell price
+ type: 33768 (number) - Type/item ID for this document

## Minutes Region Market Data
+ buyAvg: 14 (number) - Average buy price
+ buyMax: 25 (number) - Maximum buy price
+ buyMin: 10 (number) - Minimum buy price
+ buyPercentile: 16 (number) - Adjusted fifth percentile buy price
+ buyVolume: 1000 (number) - Total buy volume for this item
+ region: 10000002 (number) - Region ID
+ sellAvg: 16 (number) - Average sell price
+ sellMax: 24 (number) - Maximum sell price
+ sellMin: 10 (number) - Minimum sell price
+ sellPercentile: 18 (number) - Adjusted fifth percentile sell price
+ sellVolume: 1000 (number) - Total sell volume for this item
+ spread: 8 (number) - Spread of the buy and sell percentile prices as percentage
+ spreadValue: 6 (number) - Potential profit from the resale of this item
+ tradeValue: 16000 (number) - Total profit value traded during this time period
+ tradeVolume: 1000 (number) Estimated volume sold during this time span

## Minutes Bulk Market Data
+ type: 34 (number) - Item type ID
+ time: `2016-11-04T22:57:33.441000` (string) - ISO 8601 timestamp
+ regions: (array[Minutes Region Market Data])

## Daily Region Market Data
+ buyAvg: 14 (number) - Average buy price
+ buyMax: 25 (number) - Maximum buy price
+ buyMin: 10 (number) - Minimum buy price
+ buyPercentile: 16 (number) - Adjusted fifth percentile buy price
+ buyVolume: 1000 (number) - Total buy volume for this item
+ region: 10000002 (number) - Region ID
+ sellAvg: 16 (number) - Average sell price
+ sellMax: 24 (number) - Maximum sell price
+ sellMin: 10 (number) - Minimum sell price
+ sellPercentile: 18 (number) - Adjusted fifth percentile sell price
+ sellVolume: 1000 (number) - Total sell volume for this item
+ spread: 8 (number) - Spread of the buy and sell percentile prices as percentage
+ spreadValue: 6 (number) - Potential profit from the resale of this item
+ tradeValue: 16000 (number) - Total profit value traded during this time period
+ tradeVolume: 1000 (number) Estimated volume sold during this time span
+ volume_sma:  (number) - 7 day moving average of trade volume
+ spread_sma:  (number) - 7 day moving average of spread

## Daily Bulk Market Data
+ type: 34 (number) - Type/item ID for this document
+ time: `2016-11-04T22:57:33.441000` (string) - ISO 8601 timestamp
+ regions: (array[Daily Region Market Data])

## Portfolio Component
+ typeID: 13774 (number) - Item ID for the component
+ quantity: 10 (number) - Quantity of the component

## Material
+ quantity: 19501 (number) - Number of this item required
+ typeID: 34 (number) - Type ID for this item

## Material Array (array)
+ (Material)

## Simulation (object)
+ sell: 355000 (number) - Margin trading adjusted sell value
+ buy: 315000 (number) - Margin trading adjusted buy value
+ profit: 30000 (number) - Estimated profit made from a trade including tax, broker fees, and overhead
+ tax: 5000 (number) - Sales tax for this item
+ broker: 5000 (number) - Broker fees paid for this item

## Component
+ volume: 27297 (number) - The estimated daily trading volume for this item
+ quantity: 81 (number) - The quantity of this component
+ buildSpread: 13.44 (number) - The potential profit of building this component vs buying it for an industrial portfolio
+ materialCost: 307786.43 (number) - The estimated cost to build this component from raw materials for an industrial portfolio
+ totalPrice: 355606.38 (number) - The total sell price at this quantity for this component
+ unitPrice: 4390.98 (number) - The individual cost for this component
+ typeID: 11552 (number) - The type ID for this component
+ simulation: (Simulation)

## Component Array (array)
+ (Component)

## API Key
+ key_id: 1234567 (string) - The api key
+ vcode: 12345678910 (string) - Verification code
+ type: 0 (number) - 0 for character or 1 for corporation
+ character_id: 12345678 (number) - Character that is attached to this key
+ character_name: Char Name (string) - Character name
+ corporation_id: 12345678 (number) - Corporation of the character that is attached to this key
+ corporation_name: Corp Name (string) - Corporation name
+ wallet_balance: 1000 (number) - Wallet balance of the character or corporation
+ wallet_key: 1000 (number) - Wallet key used to pull wallet balance
+ id: 58211dd59bae1bec255e2000 (string) - Unique id for this key to be used by other endpoints

## Portfolio
+ portfolioID: 5 (number) - Identifying ID for this portfolio
+ time: `2016-11-04T22:57:33.441000` (string) - ISO 8601 date this portfolio was created
+ user_id: 12345678 (number) - Main character ID on your account this portfolio is attached to
+ name: Portfolio Name (string) - Name given to this portfolio
+ description: Portfolio Description (string) - Description given to this portfolio
+ type: 1 (number) - 1 for industry portfolio or 0 for a trading portfolio
+ startingValue: 23923832.020000003 (number) - Initial sell value calculated for this portfolio at creation
+ materialCost: 192114.93 (number) - Buy cost of all the materials to build each component in an industry portfolio
+ industryQuantity: 1 (number) - Number of runs for the item to manufacture for an industrial portfolio
+ manufacturedQuantity: 1 (number) - Actual output quantity for this blueprint multiplied by number of runs for an industrial portfolio
+ industrySpread: 24 (number) - Profit margin between the buy value of the components compared to the sell value of the manufactured item for an industrial portfolio
+ installationCost: 1000 (number) - Cost to install this blueprint for an industrial portfolio
+ efficiency: 10 (number) - Material efficiency percentage for an industrial portfolio
+ industryTypeID: 11379 (number) - The item to manufacture for an industrial portfolio
+ currentBuyValue: 20846.20 (number) - The total buy value for all components in this portfolio
+ averageSpread: 15.19 (number) - The average spread for each component in this portfolio
+ currentValue: 26846.20 (number) - The total sell value for all of the components in a trading portfolio or for the manufactured item in an industrial portfolio
+ components: (Component Array)
+ materials: (Material Array)
